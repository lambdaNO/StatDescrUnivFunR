







%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 00000000001000011111000010000000000000000000000
% 00000000001000010000000010000000000000000000000
% 00000000001000010000000010000000000000000000000
% 00000000001000011111000010000000000000000000000
% 00000000000000000000000000000000000000000000000
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Compl√©ment sur les donn√©es de survie}
\subsection{Introduction √† l'analyse des dur√©es de survie - Philippe SAINT PIERRE, Universit√© Pierre et Marie Curie}
Le terme de dur√©e de survie d√©signe le temps √©coul√© jusqu'√† la survenue d'un √©v√©nement pr√©cis. L'√©v√©nement √©tudi√© (commun√©ment appel√© d√©c√®s) est le passage irr√©versible entre deux √©tats (commun√©ment nomm√© vivant et d√©c√®s). L'√©v√©nement terminal n'est pas forc√©ment la mort : il peut s'agir de l'apparition d'une maladie (par exemple, le temps avant une rechute ou un rejet de greffe), d'une gu√©rison (temps entre le diagnostic et la gu√©rison),la panne d'une machine (dur√©e de fonctionnement d'une machine, en fiabilit√©) ou la survenue d'un sinistre (temps entre deux sinistres, en actuariat). [\dots]\newline
\\
Quelques d√©finitions sont couramment utilis√©es dans les √©tudes de survie.
\begin{itemize}
\item Date d'origine : elle correspond √† l'origine de la dur√©e √©tudi√©e. Elle peut √™tre la date
de naissance, le d√©but d'une exposition √† un facteur de risque, la date d'une op√©ration
chirurgicale, la date de d√©but d'une maladie ou la date d'entr√©e dans l'√©tude. Chaque
individu peut donc avoir une date d'origine di√©rente (pas important car c'est la dur√©e
qui nous int√©resse).
\item Date de point : c'est la date au-del√† de laquelle on arr√™tera l'√©tude et on ne tiendra
plus compte des informations sur les sujets.
\item Date des derni√®res nouvelles : c'est la date la plus r√©cente o√π des informations sur un
sujet ont √©t√© recueillies.
\end{itemize}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 00000000001000011111000010000000000000000000000
% 00000000001000010000000010000000000000000000000
% 00000000001000010000000010000000000000000000000
% 00000000001000011111000010000000000000000000000
% 00000000000000000000000000000000000000000000000
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{lstlisting}[language=html]

\end{lstlisting}

#-----------------------------------------------------------------








######----------------------------------------------------------- 








v<-seq(10,60, by=10)
w<-c(20,10,31,31,61,51)
u<-c(5,5,5,32,62,49)



##---------------------------------
##---------------------------------
##---------------------------------










##### OPERATIONS SUR BOOLEENS
#types de donn√©es simples :
#bool√©ens


#d√©finition de vecteurs de bool√©ens
A <- c(F,T,F,T)
B<- c(F,F,T,T)

#Table de v√©rit√©s : 
#ET
A & B
#OU
A | B
#non-A
!A
#OU-exclusif
xor(A,B)
#=> (non A ou B)
!A|B
#<=>
(!A|B) & (!B|A)


#on peut effectuer un "filtre bool√©en" sur les membres d'un vecteur 
#t contient tout les membres de v > 30
t <- (v>30) ;v;t
#on ne garde que les membres o√π true a √©t√© obtenu
v <- v[(v>30)] 

#which : retourne les indices du vecteurs satifaissant la condition
v
which(v == 40) #trouve les indices pour lesquels le membre est √©gal √† 30
which(v == 30)
which.max(v) #indice du max
which.min(v) #indice du min

#transformation vect bool -> vect int
as.integer(A)
#all : toutes les valeurs satifont la condition
all(v > 3)
#any : au moins une satisfait la condition
any(v < 3)


##### OPERATIONS SUR LES ENSEMBLES

#unique : supprime la redondance dans le vecteur
H<-unique(c("e","f","g","h","h","h"))

P<-c("e","f","g","h")
Q<-c("g","h","i","j")
#union
union(P,Q)

#intersection
intersect(P,Q)
#diff√©rence (non sym√©trique)

setdiff(P,Q)
setdiff(Q,P)

#diff√©rence sym√©trique
union(setdiff(P,Q),setdiff(Q,P))


#appartenance membre √† membre d'un premier ensemble √† un autre ensemble
#retourne un vecteur de bool√©en r√©pr√©sentant si le i-√®me membre de l'ensemble A appartient √† l'ensemble B

H %in% P
P %in% H
#Les listes
#r√©alit√© algorithmique : dictionaire "cl√©-valeur" (hashmap ?)

#liste cl√©-valeur
l <- list (nom = "Dupond", age = 25, vec = v)


#valeurs
l&nom
l&age
l&vec





#acc√©s par indice dans une liste
l[[1]]
l[[2]]
l[[3]]
#les facteurs 
#classes non ordonn√©es
coul <- factor(c("bleu","vert","rouge","bleu","vert"))# facteur = pas d'ordre
coul




savehistory("Sauvegarde_historique_TP1.R")
remove()







savehistory("Sauvegarde_historique_TP1.R")





\begin{lstlisting}[language=html]

\end{lstlisting}

\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/g1.png}\caption{Probabilit√© d'obtention de face entre 0 et 6}\end{center}\end{figure}





