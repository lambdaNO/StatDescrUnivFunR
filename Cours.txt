\subsection{Point de départ}\textbf{Note : } Dans \textbf{Rstudio}, la fonction \textit{colors()} nous affiche la totalité des couleurs disponibles pour réaliser de jolis graphiques.\newline\\Pour avoir un aperçu des possibilités graphiques du logiciel R, on fait :\begin{lstlisting}[language=html]demo(graphics)\end{lstlisting}Taper sur la touche "Entrée" pour faire défiler plusieurs graphiques.\newlineOn obtient, entre autre, ceux là :\begin{figure}\begin{center}\begin{tabular}{cc}\includegraphics[scale=1]{ilu/gra1.png} &\includegraphics[scale=1]{ilu/gra2.png} \\\includegraphics[scale=1]{ilu/gra3.png} &\includegraphics[scale=1]{ilu/gra4.png} \\\end{tabular}\end{center}\end{figure}Une fois que plus rien ne s'affiche, on fait :\begin{lstlisting}[language=html]dev.off()\end{lstlisting}Ces graphiques sont obtenus à l'aide de commandes. On en distingue trois sortes :\begin{itemize}\item celles qui \textcolor{red}{\textbf{créent}} une figure graphique dans une fenêtre,\item celles qui \textcolor{red}{\textbf{ajoutent}} une figure graphique à la fenêtre existante,\item celles qui \textcolor{red}{\textbf{modifient}} les paramètres du graphisme.\end{itemize}Pour illustrer ces commandes, on considèrera dès que possible le jeu de données "enquete" :\begin{lstlisting}[language=html]> enquete = read.table("http://www.math.unicaen.fr/~chesneau/enquete.txt",header = T)> enquete   poids couleur nb1   66.8    Bleu  22   50.0   Rouge  13   56.8    Noir  04   74.0   Blanc  45   46.1   Blanc  06   55.7    Noir  17   53.2    Bleu  28   54.4    Noir  29   54.4    Bleu  110  55.1    Bleu  1> attach(enquete)> str(enquete)'data.frame': 10 obs. of  3 variables: $ poids  : num  66.8 50 56.8 74 46.1 55.7 53.2 54.4 54.4 55.1 $ couleur: Factor w/ 4 levels "Blanc","Bleu",..: 2 4 3 1 1 3 2 3 2 2 $ nb     : int  2 1 0 4 0 1 2 2 1 1> enquete$poids [1] 66.8 50.0 56.8 74.0 46.1 55.7 53.2 54.4 [9] 54.4 55.1> enquete$couleur [1] Bleu  Rouge Noir  Blanc Blanc Noir  Bleu  [8] Noir  Bleu  Bleu Levels: Blanc Bleu Noir Rouge> enquete$nb [1] 2 1 0 4 0 1 2 2 1 1\end{lstlisting}\subsection{Créer un ou plusieurs graphiques}\subsubsection{La commande stripchart}L'utilisation de base est \textit{stripchart($x$)}, où $x$ désigne un vecteur numérique.\newlineOn affiche alors les valeurs ordonnées des éléments de $x$ sur un axe permettant de juger de la dispersion des valeurs.\newlineOn fait :\begin{lstlisting}[language=html]stripchart(poids)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra5.png}\end{center}\end{figure}\subsubsection{La commande dotchart}L'utilisation de base est \textit{dotchart($x$)}, où $x$ désigne un vecteur numérique.\newlineLa valeur de chaque élément de $x$ est affichée sur une ligne différente.Pour faciliter l'étude de la dispersion des valeurs, il convient d'ordonner les valeurs.\newlineOn fait :\begin{lstlisting}[language=html]dotchart(poids)\end{lstlisting}\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra6.png}\end{center}\end{figure}\begin{lstlisting}[language=html]dotchart(sort(poids))\end{lstlisting}\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra7.png}\end{center}\end{figure}\textcolor{red}{Notons que, si plusieurs graphiques se succèdent, seul le dernier apparait.}\subsubsection{La commande plot}\paragraph{Utilisation de base}L'utilisation de base est \textit{plot($x, y$)}, où $x$ et $y$ sont des vecteurs de même longueur.\newlineOn construit alors un nuage de points dont le $i$-ème point est de coordonnées $(x[i], y[i])$.\newlineSi un seul vecteur $y$ est indiqué, on un nuage de points dont le $i$-ème point est de coordonnées $(i, y[i])$.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra8.png}\end{center}\end{figure}On fait :\begin{lstlisting}[language=html]plot(c(4, 1, 2, 6, 5, 9, 7, 10, 3, 8), poids)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra9.png}\end{center}\end{figure}\paragraph{Options graphiques} Il existe des options dans \textit{plot} permettant de changer les paramètres graphiques. On les active en rajoutant une ou plusieurs commandes dans \textit{plot}. Par exemple, on fait :\begin{lstlisting}[language=html]plot(poids, type = "l", lty = 2, axes = F, main = "poids des personnes")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra10.png}\end{center}\end{figure}Quelques options sont présentées ci-dessous.\subparagraph{Option : type.} On considère les commandes \textit{type = "c"}\begin{itemize}\item si \textit{c = p}, seul le nuage de point est construit (p est l'option par défaut),\item si \textit{c = n}, seul l'encadrement est tracé,\item si \textit{c = l}, les points sont reliés par une ligne,\item si \textit{c = h}, des lignes verticales sont tracées,\item si \textit{c = o} ou si \textit{c = b}, les points sont marqués et reliés par une ligne.\end{itemize}On considère les commandes :\begin{lstlisting}[language=html]plot(poids, type = "o")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra11.png}\end{center}\end{figure}\subparagraph{Option : xlab.} Les commandes \textit{xlab = "string"} et \textit{ylab = "string"}, où string est une chaine de caractères, donnent un nom aux axes des coordonnées. Par défaut, ce sont les noms de $x$ et $y$.\newlineOn considère les commandes :\begin{lstlisting}[language=html]plot(poids, type = "b", xlab = "numero")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra12.png}\end{center}\end{figure}\subparagraph{Option : pch.} Les commandes \textit{pch = $n$}, où $n$ est un entier ou un caractère, changent la nature des points du graphique.\newlineOn considère les commandes :\begin{lstlisting}[language=html]plot(poids, pch = 4, xlab = "numero")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra13.png}\end{center}\end{figure}On fait :\begin{lstlisting}[language=html]plot(poids, type = "b", pch = "a", xlab = "numero")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra14.png}\end{center}\end{figure}\subparagraph{Option : xlim.} Les commandes \textit{xlim = c(a, b)} et/ou \textit{ylim = c(a, b)}s, où a et b sont deux nombres réels, imposent des limites aux axes.\newlineOn considère les commandes :\begin{lstlisting}[language=html]plot(poids, type = "b", xlab = "numero", xlim = c(-10, 20), ylim = c(30,90))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra15.png}\end{center}\end{figure}\subparagraph{Option : xaxt.} Les commandes \textit{xaxt = "n"} et/ou \textit{yaxt = "n"} effacent à la fois les tirets qui marquent les axes et les valeurs qui correspondent à ces tirets.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids, type = "b", xlab = "numero", xlim= c(-10, 20), ylim = c(30, 90), xaxt="n",yaxt="n")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra16.png}\end{center}\end{figure}\subparagraph{Option : col.} Les commandes \textit{col = "string"}, où string est une couleur : red, yellow, green, blue. . . ajoutent de la couleur.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids, type = "b", xlab = "numero", xlim= c(-10, 20), ylim = c(30, 90), xaxt="n",yaxt="n")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra17.png}\end{center}\end{figure}On peut aussi utiliser :\begin{itemize}\item des fonctions générant des couleurs par les commandes \textit{col = rainbow($n$), col = heat.color($n$),col = terrain.colors($n$), col = topo.colors($n$), col = cm.colors($n$)}, où $n$ désigne un entier.\begin{lstlisting}[language=html]plot(poids, pch = 19, xlab = "numero", col = rainbow(10))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra18.png}\end{center}\end{figure}\item des codes hexadécimaux avec les 2 premières uintés pour le rouge, les deux suivantes pour le vert et les deux dernières pour le bleu : \textit{col = "#120019", col = "#123418", col = "#1200FF"}\dots\begin{lstlisting}[language=html]plot(poids, pch = 19, xlab = "numero", col = "#1200FF")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra19.png}\end{center}\end{figure}\end{itemize}\subparagraph{Option : cex.} Les commandes \textit{cex = $l$}, où $l$ est un réel positif, multiplient la taille des caractères contenus dans la fenêtre par $l$. De même, les commandes \textit{cex.axis = $l$} multiplient la taille des caractères indiquant les étiquettes des axes par $l$.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids, pch = "a", xlab = "numero", cex = 3)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra20.png}\end{center}\end{figure}\subparagraph{Option : lty.} Les commandes \textit{lty = $m$}, où $m$ est un entier, changent la nature des lignes qui relient les points.\newlineOn considère les commandes :\begin{lstlisting}[language=html]plot(poids, type = "l", lty = 2)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra21.png}\end{center}\end{figure}\begin{lstlisting}[language=html]plot(poids, type = "l", lty = 24)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra22.png}\end{center}\end{figure}\subparagraph{Option : axes.}Les commandes \textit{axes = F} effacent l'entourage de la fenêtre.\newlineOn fait : \begin{lstlisting}[language=html]plot(poids, type = "l", lty = 2, axes = F)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra23.png}\end{center}\end{figure}\subparagraph{Option : main.}Les commandes \textit{main = "string"}, où string est une chaîne de caractères, mettent un titre au graphe.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids, type = "l", main = "poids des personnes")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra24.png}\end{center}\end{figure}\subparagraph{Option : lwd.}Les commandes \textit{lwd = $m$}, où $m$ est un entier, changent l'épaisseur des lignes/traits du graphe.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids, type = "l", lwd = 5)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra25.png}\end{center}\end{figure}\textcolor{red}{Pour plus de détails sur les options de plot, faire help("plot"). Cela vaut aussi pour les commandes à venir.}\subsubsection{La commande curve}La commande curve sert à confectionner rapidement certaines courbes représentatives de fonctions. On peut notamment l'utiliser pour représenter la densité et la fonction de répartition des lois d'unevariable à densité.\newlinePour dessiner la courbe représentative d'une fonction $f(x)$ entre $a$ et $b$, on fait :\begin{lstlisting}[language=html]curve(f(x), a, b)\end{lstlisting}On considère les commandes :\begin{lstlisting}[language=html]curve(sin(x), -3, 10)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra26.png}\end{center}\end{figure}On considère les commandes :\begin{lstlisting}[language=html]fonc = function(x) { sin(cos(x) * exp( -x / 2)) }curve(fonc, -8, 7)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra27.png}\end{center}\end{figure}On peut augmenter le nombre de points $n$ à discrétiser entre $a$ et $b$ en faisant :\begin{lstlisting}[language=html]curve(fonc, -8, 7, n = 2001)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra28.png}\end{center}\end{figure}On peut changer l'épaisseur de la courbe en faisant :\begin{lstlisting}[language=html]curve(fonc, -8, 7, lwd = 5)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra29.png}\end{center}\end{figure}\textcolor{red}{La plupart des options de plot (col, lwd. . . ) peuvent aussi être rajoutées dans curve.}\subsubsection{La commande barplot}\paragraph{Utilisation de base}Pour un vecteur $x$ à $n$ éléments, les commandes \textit{barplot($x$)} donnent $n$ barres verticales, la $i$-ème barre étant de hauteur proportionnelle à $x[i]$. On fait :\begin{lstlisting}[language=html]barplot(poids)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra30.png}\end{center}\end{figure}\paragraph{Utilisation en statistique}La commande barplot peut servir à :\begin{itemize}\item représenter la série brute de données issues d'une variable quantitative (quand l'effectif n'est pas trop grand) en confectionnant un diagramme en barres ou un diagramme en bandeaux.\item représenter la distribution d'une variable qualitative (en effectifs et/ou en fréquence). On rappelle que cette distribution s'obtient en associant à chaque modalité $m_{i}$ que peut prendre la variable, l'effectif $n_{i}$ et/ou la fréquence $n_{i}/n$. Dans ce cas, on a toujours en abscisse, les modalités pouvant être prises par la variable et, en ordonnée, l'effectif ou la fréquence. (\textbf{\textcolor{red}{Attention à ne pas oublier la fonction table()}}).\newlineOn fait :\begin{lstlisting}[language=html]barplot(table(couleur))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra31.png}\end{center}\end{figure}\item représenter la distribution en effectif et/ou en fréquence d'une variable discrète. (\textbf{\textcolor{red}{Attention à ne pas oublier la fonction table()}}).\newlineOn fait :\begin{lstlisting}[language=html]barplot(table(nb))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra32.png}\end{center}\end{figure}\end{itemize}\paragraph{Options graphiques}Comme pour \textit{plot}, il existe des options dans \textit{barplot} permettant de changer les paramètres graphiques. On les active en rajoutant une ou plusieurs commandes dans barplot.\newlinePar exemple, on fait :\begin{lstlisting}[language=html]barplot(poids, xlim = c(-3, 33), width = 0.8)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra33.png}\end{center}\end{figure}\end{itemize}Quelques options sont présentées ci-dessous.\subparagraph{Option : space.} Les commandes \textit{space = $l$}, où $l$ est un nombre réel, changent l'écartement entre les barres qui seront espacées de $l$ fois la largeur moyenne des barres.\newlineOn fait :\begin{lstlisting}[language=html]barplot(poids, space = 2)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra34.png}\end{center}\end{figure}\subparagraph{Option : xlim.} Les commandes \textit{xlim = c($a$, $b$)} et/ou \textit{ylim = c($a$, $b$)}, où $a$ et $b$ sont deux nombres réels, imposent des limites aux axes.\newlineOn fait :\begin{lstlisting}[language=html]barplot(poids, xlim = c(-3, 13), ylim = c(0, 100))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra35.png}\end{center}\end{figure}\subparagraph{Option : width. } \underline{Si l'option xlim a été utilisée}, on peut spécifier la largeur des barres par \textit{width = $d$}, où $d$ est la largeur souhaitée.\newlineOn considère les commandes :\begin{lstlisting}[language=html]barplot(poids, xlim = c(-3, 33), width = 0.8)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra36.png}\end{center}\end{figure}\subparagraph{Option : names.arg.} Les commandes \textit{names.arg = string}, où string est un vecteur de chaîne de caractères, attribuent le nom du $i$-ème élément de string à la $i$-ème barre.On considère les commandes :\begin{lstlisting}[language=html]prenoms = c("Karen", "Elodie", "Paul", "Paul", "Elsa", "Karen", "Aurelie","Elsa", "Karen", "Sophie")barplot(poids, space = 2, names.arg = prenoms)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra37.png}\end{center}\end{figure}Si les prénoms attribués prennent trop de place, c'est pourquoi ils ne sont pas tous affichés. \begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra38.png}\end{center}\end{figure}Une solution est :\begin{lstlisting}[language=html]prenoms = c("Karen", "Elodie", "Paul", "Paul", "Elsa", "Karen", "Aurelie","Elsa", "Karen", "Sophie")barplot(poids, space = 2, names.arg = prenoms)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra39.png}\end{center}\end{figure}\subparagraph{Option : horiz.}Les commandes \textit{horiz = $L$}, où $L$ est \textit{TRUE} ou \textit{FALSE}, tracent les barres à l'horizontale si \textit{L = TRUE} et à la verticale sinon.\newlineOn fait :\begin{lstlisting}[language=html]barplot(poids, horiz = TRUE)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra40.png}\end{center}\end{figure}\textcolor{red}{La plupart des options de plot (col, lwd\dots ) peuvent aussi être rajoutées dans barplot.}\subsubsection{La commande pie}La commande basique est \textit{pie($x$)}, où $x$ est un vecteur de longueur $l$. Elle constitue un diagramme à $p$ secteurs. Elle est principalement utilisée pour représenter la distribution d'une variable qualitative à $l$ modalités.\newlineOn fait :\begin{lstlisting}[language=html]pie(table(couleur))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra41.png}\end{center}\end{figure}\subsubsection{La commande hist}La commande basique est \textit{hist($x$)} ou \textit{hist(x, prob = TRUE)}, où $x$ est un vecteur de longueur $n$.Cette commande :\begin{itemize}\item construit automatiquement une suite de $l$ classes adjacentes $[\eta_{0},\eta_{1}],]\eta_{1},\eta_{2}],\dots,]\eta_{l−1},\eta_{l}]$ telles que l'ensemble des valeurs de $x$ est inclus dans $[\eta_{0},\eta_{l}]$ et ceci suivant une règle dite de Sturges\footnote{  La règle de Sturges est une formule mathématique proposée par Herbert Sturges (1882-1958). Elle sert à découper une plage de valeurs en tranches pour en faire la description statistique : tableaux de fréquences, histogramme, \dots.\newline  \textbf{Formulation :} Soit un échantillon de $N$ valeurs observées. On souhaite représenter la répartition, ou distribution, de ces données dans leur plage de valeurs. Pour ce faire, on découpe la plage en un certain nombre $k$ de tranches – ou classes – afin de recueillir le nombre d'observations par tranche. Ces nombres, les fréquences, peuvent être affichés dans un graphique en colonnes appelé « histogramme ».\newline  Sturges a proposé une valeur approximative pour le nombre $k$ en fonction de la taille $N$ de l'échantillon :$$k = 1+\log_{2}(N)$$  Le résultat ne sera pas, en général, entier. Il donne une appréciation de ce qui ferait un bon découpage.  \newline  \textbf{Formule alternative : } La plupart des calculatrices ne comportant pas de touche pour le $\log_{2}$, on peut utiliser la base 10, en profitant du fait que $\log_{10}(2) = 0,30103 \approx 3/10$.$$ k=1+\log_{10}(N)\times \frac{10}{3}$$\texit{Anyway, \textbf{R} le fait automatiquement.}}.Par défaut, les classes sont de même amplitude.\item calcule automatiquement la distribution en effectifs de série des données $x$ dans les classes ci-dessus, \textit{ie} la série des $n_{j}$ où $n_{j}$ est l'effectif des données qui appartiennent à la classe $]\eta_{j−1},\eta_{j}]$.\item construit $l$ rectangles accolés. On distingue alors 2 possibilités :\begin{itemize}ïtem Par défaut; si \textit{prob = FALSE} : la hauteur du rectangle pour la classe $j$ est égale à $n_{j}$. Il s'agit alors d'un histogramme des effectifs. Sur le graphe, les ordonnées sont notées (Frequency) alors qu'en réalité, il s'agit bien des effectifs.\item Si prob = TRUE : la hauteur $h_{j}$ du rectangle pour la classe $j$ est égale à $f_{j}/a_{j}$ où $f_{j} = n_{j}/n$ fréquence de la classe $j$ et où $a_{j} = \eta_{j} − \eta_{j−1}$ amplitude de la classe $j$. Il s'agit alors d'un histogramme des fréquences. Sur le graphe, les ordonnées sont indiquées (Density).\end{itemize}\end{itemize}On fait :\begin{lstlisting}[language=html]hist(poids)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra42.png}\end{center}\end{figure}On considère les commandes :\begin{lstlisting}[language=html]hist(poids, prob = TRUE)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra43.png}\end{center}\end{figure}\paragraph{Options graphiques}Comme pour \textit{plot}, il existe des options dans \textit{hist} permettant de changer les paramètres graphiques. On les active en rajoutant une ou plusieurs commandes dans hist. \newlinePar exemple, on fait :\begin{lstlisting}[language=html]hist(poids, breaks = c(45, 60, 75), prob = T)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra44.png}\end{center}\end{figure}Quelques options sont présentées ci-dessous.\subparagraph{Option : break.}Les commandes \textit{breaks = $x$}, où $x$ est un vecteur numérique, donnent les extrémités des classes.\newlineOn considère les commandes :\begin{lstlisting}[language=html]hist(poids,breaks = c(45, 60, 75))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra45.png}\end{center}\end{figure}On considère les commandes :\begin{lstlisting}[language=html]hist(poids,breaks = c(45, 60, 75), prob = TRUE)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra46.png}\end{center}\end{figure}Notons que l'histogramme obtenu a même allure que le précédent mais on se trouve dans le deuxième cas et les hauteurs des rectangles sont maintenant des densités.\newlineOn fait :\begin{lstlisting}[language=html]hist(poids,breaks = c(45, 50, 70, 75))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra47.png}\end{center}\end{figure}Ainsi, le fait que les classes ne soient plus d'amplitudes égales active l'option \textit{prob = TRUE}.\subparagraph{Option : right. } Les commandes \textit{right = $L$}, où $L$ est TRUE ou FALSE, considèrent des intervalles de la forme $]\eta_{j−1},\eta_{j}]$ si \textit{$L$ = TRUE}, sinon de la forme $[\eta_{j−1},\eta_j[$.\newlineOn fait :\begin{lstlisting}[language=html]hist(poids, right = FALSE)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra48.png}\end{center}\end{figure}On fait :\begin{lstlisting}[language=html]hist(poids,right = TRUE)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra49.png}\end{center}\end{figure}\textcolor{red}{La plupart des options de plot (col, lwd\dots) peuvent aussi être rajoutées dans hist.}\subsubsection{La commande boxplot}La commande basique est \textit{boxplot($x$)}, où $x$ est un vecteur de longueur $n$. Elle construit la boîte à moustaches de $x$.\newlineOn fait :\begin{lstlisting}[language=html]boxplot(poids)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra50.png}\end{center}\end{figure}Pour construire une boîte à moustaches de $x$ pour chaque élément d'un vecteur $y$, on fait : \textit{boxplot(x $\sim$ y)}.\newlineOn fait :\begin{lstlisting}[language=html]boxplot(poids ~ couleur)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra51.png}\end{center}\end{figure}\subsubsection{Avoir plusieurs graphiques sur la même fenêtre}Les commandes \textit{par(mfrow = c(k, l))}, où $k$ et $l$ sont des entiers, servent à découper l'écran en $k$ lignes et $l$ colonnes.\newlineLorsque plusieurs commandes créant un graphique se succèdent, ces graphiques se positionnent par ligne sur les cases ainsi créées.\newlineSi on veut qu'ils se positionnent par colonne, on fait \textit{par(mfcol = c(k, l))}.\newlineOn fait :\begin{lstlisting}[language=html]par(mfrow = c(2, 1))hist(poids)plot(poids)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra52.png}\end{center}\end{figure}\begin{lstlisting}[language=html]par(mfcol = c(1, 2))hist(poids)plot(poids)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra53.png}\end{center}\end{figure}Pour revenir à la configuration de départ, on fait \textit{par(mfrow = c(1, 1))}.\subsubsection{Avoir plusieurs graphiques successifs}Les commandes \textit{par(ask = TRUE)} affichent plusieurs graphiques successivement.On considère les commandes :\begin{lstlisting}[language=html]par(ask = TRUE)hist(poids)plot(poids)\end{lstlisting}Cela renvoie successivement les graphiques. Il faut entrer ⌘+⏎ pour afficher le suivant.\newlinePour revenir à la configuration de départ, on fait \textit{par(ask = FALSE)}.\subsection{Additionner un graphique à un graphique existant}\subsubsection{La commande points}L'utilisation de base est \textit{points($x$, $y$)}, où $x$ et $y$ sont 2 vecteurs de même longueur. Cela ajoute à la figure existante un nuage de points associé à $(x, y)$.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids)points(c(2, 2, 6.3), c(55, 60, 70), cex = 2, pch = 5, col = "red")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra54.png}\end{center}\end{figure}\subsubsection{La commande lines}L'utilisation de base est \textit{lines($x$, $y$)}, où $x$ et $y$ sont 2 vecteurs de même longueur. Cela ajoute à la figure existante une ligne reliant les points du nuage de points associé à $(x, y)$.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids)lines(1:8, rep(60, 8) + c(-10, 10), lty = 3,col="blue")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra55.png}\end{center}\end{figure}\subsubsection{La commande text}L'utilisation de base est \textit{text($x$, $y$, string)}, où $x$ et $y$ sont 2 vecteurs de même longueur, et string est un vecteur chaîne de caractères.Cela attribue le nom du $i$-ème élément de string au point de coordonnées $(x[i], y[i])$.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids)text(7, 72, paste("moyenne = ", mean(poids)))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra56.png}\end{center}\end{figure}On considère les commandes :\begin{lstlisting}[language=html]prenoms = c("Karen", "Elodie", "Paul", "Paul", "Elsa", "Karen", "Aurelie",            "Elsa", "Karen", "Sophie")plot(poids)text(poids + c(rep(-1, 4), 1, rep(-1, 5)), prenoms, cex = 0.7)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra57.png}\end{center}\end{figure}\subsubsection{La commande abline}\begin{itemize}\item \textit{abline($h = y$)} trace une ligne horizontale de coordonnée $y$.\item \textit{abline($v = x$)} trace une ligne verticale de coordonnée $x$.\item \textit{abline($a, b$)} trace la droite d'équation : $y = a + bx$.\end{itemize}On fait :\begin{lstlisting}[language=html]plot(poids)abline(h = 65)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra58.png}\end{center}\end{figure}On fait :\begin{lstlisting}[language=html]plot(poids)abline(v = 6)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra59.png}\end{center}\end{figure}On fait :\begin{lstlisting}[language=html]plot(poids)abline(0,8,col="blue")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra60.png}\end{center}\end{figure}\subsubsection{Les commandes curve(f(x), add = TRUE)}Les commandes \textit{curve($f(x)$, add = TRUE)} ajoutent à la fenêtre courante le graphe de la fonction $f(x)$.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids)curve(60 + sin(7 * x), add = T)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra61.png}\end{center}\end{figure}\subsubsection{La commande segments}Les commandes \textit{segments($x1$, $y1$, $x2$, $y2$)}, où $x1$, $y1$, $x2$ et $y2$ sont des vecteurs, tracent des segments entre les points de coordonnées : $(x1[i], y1[i])$ et $(x2[i], y2[i])$.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids)segments(c(4, 8), c(55, 60), c(2, 10), c(70, 65))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra62.png}\end{center}\end{figure}Si on remplace \textit{segments} par \textit{arrows}, on trace des flèches entre les points de coordonnées : $(x1[i], y1[i])$ et $(x2[i], y2[i])$.On considère les commandes :\begin{lstlisting}[language=html]plot(poids)arrows(c(4, 8), c(55, 60), c(2, 10), c(70, 65))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra63.png}\end{center}\end{figure}\subsubsection{La commande title}Les commandes \textit{title(string)} ajoutent un titre qui est la chaîne de caractères string.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids)title(paste("Graphique du poids des", length(poids), "personnes"))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra64.png}\end{center}\end{figure}\subsubsection{La commande axis}Les commandes \textit{axis($k$, vec1, labels = vec2)}, où\begin{itemize}\item $k$ est 1, 2, 3 ou 4 (1 correspond à l'axe des $x$, 2 à l'axe des $y$, 3 à l'axe du sommet de la fenêtre et 4 à l'axe à droite de la fenêtre),\item vec1 est un vecteur qui indique où les tirets doivent être marqués,\item vec2 un vecteur de chaine de caractères qui donne le nom de chacun des tirets,\end{itemize}changent la configuration de l'axe correspondant à $k$.\newline\textbf{Avant d'utiliser} \textit{axis}, il faut inclure dans le plot \textit{xaxt = "n"} et/ou \textit{yaxt = "n"} pour effacer l'écriture automatique des étiquettes des axes.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids, xaxt = "n")axis(1, 1:10, 1:10)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra65.png}\end{center}\end{figure}On considère les commandes :\begin{lstlisting}[language=html]plot(poids, yaxt = "n")axis(2, 1:100, 1:100)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra66.png}\end{center}\end{figure}\subsubsection{La commande legend}Les commandes \textit{legend($x$, $y$, legend)} ajoutent une légende de contenu legend au point de coordonnées $(x, y)$.\newlineOn fait :\begin{lstlisting}[language=html]plot(poids, type = "l")lines(c(2, 3, 5), c(50, 48, 62), col = "red")legend(8, 65, legend = c("poids", "ajout"), fill = c("black", "red"))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra67.png}\end{center}\end{figure}Plus simplement, on peut faire \textit{$x$ = "string"} et ignorer $y$, où string est l'endroit où l'on veut mettre la légende : \textit{bottomright, bottom, bottomleft, left, topleft, top, topright, right} et \textit{center}On considère les commandes :\begin{lstlisting}[language=html]plot(poids, type = "l")lines(c(2, 3, 5), c(50, 48, 62), col = "red")legend("topleft", legend = c("poids", "ajout"), fill = c("black", "red"))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra68.png}\end{center}\end{figure}\subsubsection{La commande grid}Une fois le graphique affiché, on peut mettre un quadrillage au fond en faisant \textit{grid()}. De nombreuses options graphiques existent alors (\textit{lwd, lty}\dots).\newlineOn fait :\begin{lstlisting}[language=html]plot(poids, type = "o")grid(lwd = 2)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra69.png}\end{center}\end{figure}On considère les commandes :\begin{lstlisting}[language=html]plot(poids, type = "o")grid(lwd = 2,col="turquoise")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra70.png}\end{center}\end{figure}\subsubsection{Les problèmes d'échelles}Quand on ajoute une ou plusieurs figures dans une figure existante, il n'est pas sûr que celles-ci rentrent dans le cadre. Pour éviter cet inconvénient, il faut préciser les limites inférieures et supérieures de l'ordonnée en utilisant un vecteur \textit{vec} de longueur 2 qui donne cette information et écrire dans \textit{plot}, les commandes \textit{ylim = vec}. Si on veut agir sur l'échelle des $x$, on utilise \textit{xlim = vec}.\newlineUne figure $j$ est généralement définie par un couple de vecteurs $(x_{j},y_{j})$. On calcule alors \textit{limx = range($x1$, $x2$,\dots)} et \textit{limy = range($y1$, $y2$,\dots)}.\newlineOn trace le cadre du graphique en faisant :\begin{lstlisting}[language=html]plot(x1, y1, xlim = limx, ylim = limy, type = "n")\end{lstlisting}On peut alors ajouter des figures avec les commandes déjà vues.\subsection{ggplot2 : pour commencer}Il existe des outils évolués pour faire des graphiques sophistiqués avec le logiciel \textbf{R}.\newlineQuelques exemples "pas à pas" utilisant la librairie ggplot2 avec le jeu de données "enquete" sont présentés ci-dessous.\newlineEn premier lieu, on fait :\begin{lstlisting}[language=html]library(ggplot2)\end{lstlisting}On fait :\begin{lstlisting}[language=html]ggplot(enquete, aes(x = 1:10, y = poids)) + geom_point()\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra71.png}\end{center}\end{figure}On considère les commandes :\begin{lstlisting}[language=html]ggplot(enquete, aes(x = 1:10, y = poids)) + geom_point(aes(color = nb))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra72.png}\end{center}\end{figure}On considère les commandes :\begin{lstlisting}[language=html]p1 = ggplot(enquete, aes(x = 1:10, y = poids)) + geom_point(aes(color = nb, shape = couleur))p1\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra73.png}\end{center}\end{figure}On considère les commandes :\begin{lstlisting}[language=html]p1 + scale_x_continuous(name = "individus")\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra74.png}\end{center}\end{figure}On fait :\begin{lstlisting}[language=html]ggplot(enquete, aes(x = couleur, y = poids)) + geom_boxplot()\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra75.png}\end{center}\end{figure}\textcolor{red}{Avec ggplot2 et du travail, d'autres graphiques sophistiqués sont possibles. La documentation est disponible \underline{\href{http://docs.ggplot2.org/current/}{ici}}}\subsection{Pour finir}De nombreuses librairies, non présentées ici, permettent de faire des graphiques évolués. Citons entre autre \textit{graphics, lattice, grid} et \textit{plotrix}.\newlineOn termine avec un simple et joli camembert utilisant la librairie \textit{plotrix} :\begin{lstlisting}[language=html]library(plotrix)pie3D(table(couleur), explode = 0.1, labelcex = 1,labels=levels(couleur))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra76.png}\end{center}\end{figure}\subsection{Exercices}\subsubsection{Enoncés}\paragraph{Exercice 1. }\textcolor{white}{.}\newlineOn considère les 2 fonctions :$$f(x)=x^{2} -6x -3 \textrm{ et } g(x) = x^{2} + x - 1$$Proposer des commandes R permettant d'obtenir une représentation graphique.\paragraph{Exercice 2. }\textcolor{white}{.}\newlineOn considère le jeu de données "enquete" :\begin{lstlisting}[language=html]enquete = read.table("http://www.math.unicaen.fr/~chesneau/enquete.txt",header = T)attach(enquete)\end{lstlisting}\begin{enumerate}\item Proposer des commandes R permettant d'obtenir un histogramme des fréquence de \textit{poids} par ordre décroissant: \item Proposer des commandes R permettant d'obtenir un histogramme des fréquence et des effectifs de \textit{couleur} : \item Proposer des commandes R permettant d'obtenir un histogramme des fréquence et des effectifs triés de \textit{couleur} \end{enumerate}\paragraph{Exercice 3. }\textcolor{white}{.}\newlineOn considère le jeu de données "nba" :\begin{lstlisting}[language=html]nba = read.table("http://www.math.unicaen.fr/~chesneau/nba.txt", header = T, sep = ",")attach(nba)\end{lstlisting}On dispose :\begin{itemize}\item de l'identité du joueur (variable \textit{Joueur}),\item de leur rôle sur le terrain (variable \textit{X2}),\item de leur taille (variable \textit{X1}),\item de leur poids (variable \textit{Y}),\item de leur âge (variable \textit{X3}).\end{itemize}\begin{enumerate}\item Préciser la nature des variables étudiées.\item Renommer les labels des variables par : \textit{joueur, role, taille, poids} et \textit{age}.\item Représenter la dispersion des poids des basketteurs avec la commande \textit{stripchart}, puis sa distribution avec la commande \textit{hist}.\item Représenter la distribution des tailles des basketteurs avec la commande \textit{hist}.\item Représenter la distribution de la variable role avec la commande \textit{pie}.\item étudier graphiquement les paramètres statistiques de \textit{poids} en fonction de \textit{role}.\item étudier graphiquement les paramètres statistiques de \textit{poids} en fonction de \textit{age}.\item étudier graphiquement les paramètres statistiques de \textit{taille} en fonction de \textit{age}.\item Représenter le nuage de points associés à (\textit{taille}, \textit{poids}). Sur ce même graphique, tracer la fonction :$$f(x) = e^{-4.59678}x^{2.28551}\textrm{, } x \in [66,88].$$\item Proposer des commandes \textbf{R} utilisant la librairie ggplot2 permettant d'obtenir un graphique mettant en relation les variables \textit{poids} (ordonnées), \textit{taille} en abscisses et en légende, \textit{role} et \textit{age}.\item Commenter les commandes suivantes et le graphique obtenu :\begin{lstlisting}[language=html]ggplot(nba, aes(x = taille, y = poids)) + geom_point(shape=1)   + geom_smooth(, se = FALSE)\end{lstlisting}\end{enumerate}\paragraph{Exercice 4. }\textcolor{white}{.}\newlineSoit $\nu > 0$, On appelle "densité associée à la loi de Student $\mathcal{T(\nu)}$" la fonction :$$f_{\nu}(x) = \frac{1}{\sqrt{\nu\pi}}\frac{\Gamma\left(\frac{\nu+1}{2}\right)}{\Gamma\left(\frac{\nu}{2}\right)}\left(1 + \frac{x^{2}}{\nu}\right)^{\frac{\nu+1}{2}}\textrm{, }x\in \mathbb{R}$$où $\Gamma$ désigne la fonction gamma d'Euler définie par :$$\Gamma(x) = \int_{0}^{\infty} t^{x-1}e^{-t}\textrm{dt, } x>0$$\begin{enumerate}\item Créer dans R la fonction \textit{tdens(x, nu)} représentant la fonction $f_{\nu}(x)$.\item à partir de cette fonction R, proposer des commandes R permettant d'obtenir le graphique des densités associées à la loi de Student pour $\nu =1$,$\nu =2$,$\nu =5$ et $\nu =16$ \end{enumerate}\paragraph{Exercice 5. }\textcolor{white}{.}\newlineSoient\begin{itemize}\item $x$ le vecteur numérique dont les éléments sont disponibles \underline{\href{http://www.math.unicaen.fr/~chesneau/norm.txt}{ici}} :\item la fonction f représentant $f : \mathbb{R} \rightarrow [0,+\infty[$$$f(x) = \frac{1}{\sqrt{2\pi}}e^{-\frac{x^{2}}{2}}$$\end{itemize}\begin{enumerate}\item Proposer des commandes permettant d'obtenir sur un même graphique, l'histogramme de $x$ et la fonction $f$ (abscisses $x$, ordonnées : fréquence $f(x)$) ainsi qu'une approximation de la fonction $f$.\item Proposer des commandes permettant d'obtenir les mêmes graphiques séparément, alignés de manière verticale.\end{enumerate}\paragraph{Exercice 6. }\textcolor{white}{.}\newlineReproduire et comprendre l'enjeu des commandes suivantes :\begin{lstlisting}[language=html]x = rnorm(18)y = rnorm(18)plot(x, y, xlab = "", ylab = "", xlim = c(-2, 2), ylim = c(-2, 2), pch = 22,col = "red", bg = "yellow", bty = "l", tcl = 0.4, main = "Nuage de points")grid(lwd = 1)\end{lstlisting}\paragraph{Exercice 7. }\textcolor{white}{.}\newlineReproduire et comprendre l'enjeu des commandes suivantes :\begin{lstlisting}[language=html]plot(1, 1, xlim = c(1, 5.5), ylim = c(0, 7), type = "n", xlab = "", ylab = "")text(1:5, rep(6, 5), labels = c(0:4), cex = 1:5, col = 1:5)points(1:5, rep(5, 5), cex = 1:5, col = 1:5, pch = 0:4)text((1:5) + 0.4, rep(5, 5), cex = 0.6, (0:4))points(1:5, rep(4, 5), cex = 2, pch = (5:9))text((1:5) + 0.4, rep(4, 5), cex = 0.6, (5:9))points(1:5, rep(3, 5), cex = 2, pch = (10:14))text((1:5) + 0.4, rep(3, 5), cex = 0.6, (10:14))points(1:5, rep(2, 5), cex = 2, pch = (15:19))text((1:5) + 0.4, rep(2, 5), cex = 0.6, (15:19))points((1:6)*0.8 + 0.2, rep(1, 6), cex = 2, pch = (20:25))text((1:6)*0.8 + 0.5, rep(1, 6), cex = 0.6, (20:25))\end{lstlisting}\subsubsection{Solutions}\paragraph{Exercice 1. }\textcolor{white}{.}\newline\begin{lstlisting}[language=html]#Nous déclarons les fonctions.f= function(x){  x^2 - 6*x - 3}g = function(x){  x^2 + x - 1 }# On trace la première fonction f(x) et définissons l'environnement graphiquecurve(f(x), -12, 12, col = "red", xlab = "x", ylab = "y", lwd = 2,      main = "Graphiques de f(x) et g(x)")# Nous ajoutons la gridgrid()# Nous ajoutons la fonction g(x)curve(g(x), col = "blue", lwd = 2, add = TRUE)# Nous ajoutons la légendelegend("topright", col = c("red", "blue"), lty=1, legend = c("f(x)", "g(x)"))\end{lstlisting}\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra77.png}\end{center}\end{figure}\paragraph{Exercice 2. }\textcolor{white}{.}\newline\begin{lstlisting}[language=html]#Import des données enquete = read.table("http://www.math.unicaen.fr/~chesneau/enquete.txt",header = T)#Affichage des données du data framestr(enquete)attach(enquete)#On définit trois nouveaux objets (les variables du dataframe), sur lesquels on pourra faire appel directement#Pas besoin de faire enquete$poids ...\end{lstlisting}\begin{enumerate}\item On fait :\begin{lstlisting}[language=html]bppoids = barplot(  sort(poids, decreasing = T),   ylim = c(0, 80),   main = "Poids",  col = heat.colors(10) ## Dégradé à 10 nuances)text(  bppoids,   sort(poids, decreasing=T) + 1.5, ## Permet d'afficher les résultats textuels (1,5 unité au dessus des graphes)   sort(poids, decreasing = T))axis(  1,   at = bppoids,  labels = order(poids, decreasing = T))\end{lstlisting}\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra78.png}\end{center}\end{figure}\item On fait :\begin{lstlisting}[language=html]tcoul = table(couleur) # On récupère les effectifs de couleurs et on les stock dans un vecteur (Blanc : 2, Bleu : 4, Noir : 3, Rouge : 1)bpcoul = barplot(  tcoul,   ylim = c(0,10),   main = "Couleur choisie",  col = heat.colors(4) ## Dégradé à 4 nuances)text(  bpcoul,   tcoul + 0.5,   tcoul)## On va rajouter l'axe de droite correspondant aux fréquencesaxis(  4,   at = (0:10),  labels = seq(0, 1, by = 0.1))## Et on rajoute des tirets pour sous chaque barre pointants vers le nom de la couleuraxis(  1,   at = bpcoul,  labels = names(tcoul))\end{lstlisting}\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra79.png}\end{center}\end{figure}\item On fait :\begin{lstlisting}[language=html]tcoul = table(couleur)bpcoulbis =   barplot(    sort(tcoul, decreasing = T),     ylim = c(0, 10),    main = "Couleur choisie",     col = heat.colors(4))text(  bpcoulbis,   sort(tcoul, decreasing = T) + 0.5,   sort(tcoul, decreasing = T))axis(  4,   at = (0:10),   labels = seq(0, 1, by = 0.1))axis(  1,   at = bpcoulbis,   labels = names(tcoul)[order(tcoul, decreasing = T)])\end{lstlisting}\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra80.png}\end{center}\end{figure}\end{enumerate}\paragraph{Exercice 3. }\textcolor{white}{.}\newline\begin{lstlisting}[language=html]nba = read.table("http://www.math.unicaen.fr/~chesneau/nba.txt",header = T, sep = ",")\end{lstlisting}\begin{enumerate}\item On fait : \begin{lstlisting}[language=html]> str(nba)'data.frame': 505 obs. of  5 variables: $ Joueur: Factor w/ 505 levels "Aaron\xa0Brooks",..: 360 198 391 438 480 253 99 297 432 499 ... $ X2    : Factor w/ 3 levels "C","F","G": 3 3 3 3 3 3 3 3 3 3 ... $ X1    : int  69 69 71 71 71 71 72 72 72 72 ... $ Y     : int  180 185 175 176 195 157 180 205 175 185 ... $ X3    : int  29 24 22 20 25 30 25 27 28 30 ...\end{lstlisting}On dispose alors de la nature des variables considérées ($X2$ est une variable qualitative avec 3 modalités "C", "F" et "G", $X1$ est une variable qualitative à valeurs entières, idem pour $Y$ et $X3$).\item On fait :\begin{lstlisting}[language=html]## Etat initial.> names(nba)[1] "Joueur" "X2"     "X1"     "Y"      "X3"    > names(nba) = c("joueurs", "role", "taille", "poids", "age")## Surcharge des noms des variables> names(nba)[1] "joueurs" "role"    "taille"  "poids"   "age"   #On définit de nouveaux objets attach(nba)\end{lstlisting}\item \begin{itemize}\item Pour représenter simplement la dispersion des \textit{poids} des basketteurs, on fait :\begin{lstlisting}[language=html]stripchart(poids)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra81.png}\end{center}\end{figure}\item La distribution associée est donnée par les commandes :\begin{lstlisting}[language=html]hist(poids)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra82.png}\end{center}\end{figure}\end{itemize}\item Pour représenter simplement la distribution des \textit{tailles} des basketteurs, on fait :\begin{lstlisting}[language=html]hist(taille)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra83.png}\end{center}\end{figure}\item La distribution de la variable \textit{role} avec la commande pie peut être représentée avec les commandes :\begin{lstlisting}[language=html]pie(table(role),col = heat.colors(3))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra84.png}\end{center}\end{figure}\item Les paramètres statistiques de \textit{poids} en fonction de \textit{role} peuvent se visualiser avec des boîtes à moustaches :\begin{lstlisting}[language=html]boxplot(poids~role,col = topo.colors(3))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra85.png}\end{center}\end{figure}\item Les paramètres statistiques de \textit{poids} en fonction de \textit{age} peuvent se visualiser avec des boîtes à moustaches :\begin{lstlisting}[language=html]range(names(table(age)))[1] "15" "40"nb <- 40-15boxplot(poids~age,col=terrain.colors(nb))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra86.png}\end{center}\end{figure}\item Les paramètres statistiques de \textit{taille} en fonction de \textit{age} peuvent se visualiser avec des boîtes à moustaches :\begin{lstlisting}[language=html]range(names(table(age)))[1] "15" "40"nb <- 40-15boxplot(taille~age,col=rainbow(nb))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra87.png}\end{center}\end{figure}\item Pour construire le nuage de points associé à (taille, poids), on fait :\begin{lstlisting}[language=html]plot(taille, poids)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra88.png}\end{center}\end{figure}On trace la fonction demandée en faisant :\begin{lstlisting}[language=html]h = function(x){  exp(-4.59678)*x^(2.28551)}curve(h, 66, 88, col = "red", lwd = 2, add = TRUE)\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra89.png}\end{center}\end{figure}\item On propose les commandes :\begin{lstlisting}[language=html]library(ggplot2)ggplot(nba, aes(x = taille, y = poids)) +  geom_point(aes(color = age, shape = role))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra90.png}\end{center}\end{figure}\item On construit le nuage de points associé à (taille, poids) et on trace une courbe estimée qui ajuste au mieux ce nuage.\begin{lstlisting}[language=html]library(ggplot2)ggplot(nba, aes(x = taille, y = poids)) + geom_point(shape=1) + geom_smooth(, se = FALSE,method = 'loess')\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra91.png}\end{center}\end{figure}\end{enumerate}\paragraph{Exercice 4. }\textcolor{white}{.}\newline\begin{enumerate}\item On propose les commandes :\begin{lstlisting}[language=html]tdens = function(x, nu) {  (1 / sqrt(nu * pi)) * (gamma((nu + 1)/2) / gamma(nu / 2)) * (1 + x^2 / nu)^(-(nu + 1) / 2)}\end{lstlisting}\item On fait :\begin{lstlisting}[language=html]## On ajoute les 4 courbes pour des valeurs de nu différentes### nu = 1 + Les paramètres de la fenêtre graphiquecurve(tdens(x, 1), xlim = c(-6, 6), ylim = c(0, 0.38), col = "#0C99F9", lwd = 3,      ylab = "", main = "Densités associées à la loi de Student")### nu = 2curve(tdens(x, 2), col = "#F0CF99", lwd = 3, add = TRUE)### nu = 5curve(tdens(x, 5), col = "#CFFFF9", lwd = 3, add = TRUE)### nu = 16curve(tdens(x, 16), col = "#CC00F9", lwd = 3, add = TRUE)## On trace les axes de centrageabline(h = 0, lty = 2)abline(v = 0, lty = 2)## On ajoute les légendelegend("topright",       legend = c(         expression(paste(nu, "=1")),         expression(paste(nu, "=2")),         expression(paste(nu, "=5")),         expression(paste(nu, "=16"))),       lwd = 3, col = c("#0C99F9", "#F0CF99", "#CFFFF9", "#CC00F9"))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra92.png}\end{center}\end{figure}\end{enumerate}\paragraph{Exercice 5. }\textcolor{white}{.}\newline\begin{enumerate}  \item On propose les commandes suivantes :\begin{lstlisting}[language=html]## Le séparateur de variable ici est un espace.x = scan("http://www.math.unicaen.fr/~chesneau/norm.txt", sep = " ")hist(  x,   main = "Histogramme de x et fonction f",   ylab = "Fréquence",  freq = FALSE,   col = cm.colors(14))f = function(x) {   (1/sqrt(2 * pi)) * exp(- x^2 / 2) }curve(f,       -4,       4,       col = "darkblue",       lwd = 2,       add = T)legend(  "topleft",   col = c(cm.colors(1), "darkblue"),   lty = 1,  legend = c("histogramme", "fonction f"))\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra93.png}\end{center}\end{figure}\item On propose les commandes suivantes :\begin{lstlisting}[language=html]par(mfrow = c(2,1))hist(  x,   main = "Histogramme de x",   ylab = "Fréquence",   freq = FALSE,  col = cm.colors(14))legend(  "topleft",   fill = cm.colors(2),   legend = "histogramme")curve(f,       -4,       4,       col = "darkblue",       lwd = 2,       main = "fonction f")legend(  "topleft",   fill = "darkblue",   legend = "fonction f")par(mfrow = c(1,1)) ## A ne pas oublier sinon on est dans la ... pour les graphiques suivants\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra94.png}\end{center}\end{figure}\end{enumerate}\paragraph{Exercice 6. }\textcolor{white}{.}\newline\begin{lstlisting}[language=html]x = rnorm(18)y = rnorm(18)plot(x, y, xlab = "", ylab = "", xlim = c(-2, 2), ylim = c(-2, 2), pch = 22,col = "red", bg = "yellow", bty = "l", tcl = 0.4, main = "Nuage de points")grid(lwd = 1)\end{lstlisting}On simule 18 points dont les coordonnées sont des réalisations d'un couple de variables aléatoires réelles (X, Y ), avec X et Y suivant chacune la loi normale $\mathcal{N}(\mu,\sigma^{2})$ où $\mu = 0$ et $\sigma^{2}=1$. \newlineEnsuite, on représente le nuage de points en utilisant des options graphiques spécifiques sur le format des points. \newlinePour finir, on met un quadrillage au fond du graphique. Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra95.png}\end{center}\end{figure}\paragraph{Exercice 7. }\textcolor{white}{.}\newline\begin{lstlisting}[language=html]plot(1, 1, xlim = c(1, 5.5), ylim = c(0, 7), type = "n", xlab = "", ylab = "")text(1:5, rep(6, 5), labels = c(0:4), cex = 1:5, col = 1:5)points(1:5, rep(5, 5), cex = 1:5, col = 1:5, pch = 0:4)text((1:5) + 0.4, rep(5, 5), cex = 0.6, (0:4))points(1:5, rep(4, 5), cex = 2, pch = (5:9))text((1:5) + 0.4, rep(4, 5), cex = 0.6, (5:9))points(1:5, rep(3, 5), cex = 2, pch = (10:14))text((1:5) + 0.4, rep(3, 5), cex = 0.6, (10:14))points(1:5, rep(2, 5), cex = 2, pch = (15:19))text((1:5) + 0.4, rep(2, 5), cex = 0.6, (15:19))points((1:6)*0.8 + 0.2, rep(1, 6), cex = 2, pch = (20:25))text((1:6)*0.8 + 0.5, rep(1, 6), cex = 0.6, (20:25))\end{lstlisting}En utilisant plusieurs commandes graphiques usuelles, on a : \begin{enumerate}  \item  créer un graphique vide (dans lequel on a)  \item afficher les chiffres $0, 1, 2, 3$ et $4$, avec une taille croissante et des couleurs changeantes,  \item  afficher les "points" codés $0, 1, 2, 3$ et $4$ dans l'option pch, toujours avec une taille croissante et des couleurs changeantes,  \item afficher les "points" codés $5, 6, 7, 8$ et $9$ dans l'option pch,  \item afficher les "points" codés $10, 11, 12, 13$ et $14$ dans l'option pch,  \item afficher les "points" codés $15, 16, 17, 18$ et $19$ dans l'option pch,  \item afficher les "points" codés $20, 21, 22, 23, 24$ et $25$ dans l'option pch.\end{enumerate}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra96.png}\end{center}\end{figure}%%%%% REMPLACER LES ', à, ê, é, è, î, ù, é%%%%% REMPLACER LES '%%%%% REMPLACER LES 'On considère les commandes :\begin{lstlisting}[language=html]\end{lstlisting}Cela renvoie :\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/gra.png}\end{center}\end{figure}\begin{lstlisting}[language=html]\end{lstlisting}\begin{lstlisting}[language=html]\end{lstlisting}\begin{lstlisting}[language=html]\end{lstlisting}\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/g1.png}\end{center}\end{figure}\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/g1.png}\end{center}\end{figure}%%%%% REMPLACER LES '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%////// \begin{description} \item[mot1 :] définition1 ; \item[mot2 :] définition2. \end{description}%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\subsection{Entrée et sortie}\textbf{load() }:charge le jeu de données écrit avec  save\newline   \textbf{data(x)  }:   charge le jeu de données spécifié\newline   \textbf{read.table(file)}:     lit un fichier au format tabulaire et en fait un data frame; le séparateur de colonne par défaut sep="" désigne n'importe quel espacement; utilisez header=TRUE pour prendre la première ligne comme titre (header)   de colonne; utilisez as.is=TRUE pour empêcher les vecteurs de caractères d'être transformés en factors; utilisez skip=n  pour  ignorer les n  premières lignes ; consultez l'aide pour les options concernant le nommage des colonnes, le traitement des valeurs manquantes (NA), etc.\newline   \textbf{read.csv2("filename",header=TRUE) }:    idem mais avec des options pré-définies pour lire les fichiers CSV\newline   \textbf{read.delim("filename",header=TRUE)  }:   idem mais avec des options pré-définies pour lire les fichiers dont les  valeurs sont séparées par des tabulations\newline   \textbf{read.fwf(file,widths,header=FALSE,sep=" ",as.is=FALSE) }:    lit un tableau dont toutes les colonnes ont la même largeur (fwf: fixed width format); widths est un vecteur d'entiers donnant la largeur des colonnes dans le fichier\newline   \textbf{save("fichier", x,y)}:     enregistre les objets x et y dans le fichier, au format binaire XDR propre à R\newline\\   \textbf{save.image("fichier") }:    enregistre tous les objets\newline\\   \textbf{cat(\dots, file="", sep=" ")}:     affiche les arguments après les avoir converti en caractères; sep est le séparateur entre les arguments\newline\\   \textbf{print(a, \dots)  }:   affiche les arguments; fonction générique (fonctionne différemment selon la classe de a)\newline\\   \textbf{format(x,\dots)  }:   formate un objet R pour un affichage personnalisé\newline\\   \textbf{write.table(x,file="",row.names=TRUE,col.names=TRUE, sep=" ") }:    affiche  x  après l'avoir converti en data frame; si quote  est TRUE, les colonnes  de caractères ou de factors sont entourés par des guillemets; sep  est le séparateur de colonnes. Avec file= suivi du chemin d'un fichier, écrit sur le disque dur\newline\\   La plupart des fonctions d'entrée/sortie ont un argument file . Cela peut souvent être une chaîne de caractères nommant un fichier ou une connexion. Sous Windows, la connexion peut aussi être utilisée avec description ="clipboard" pour lire un tableau copié d'un tableur par le presse-papier          \newline\\   \textbf{x <- read.delim("clipboard")    }: pour lire un tableau copié par le presse-papier depuis un tableur\newline\\   \textbf{write.table(x,"clipboard",sep="\t",col.names=NA)}:     pour écrire un tableau vers le presse-papier pour un tableur\newline\\                                      \subsection{Création de données}\textbf{c(\dots)   }:  fonction combinant les arguments pour former un vecteur; avec recursive=TRUE va dans les listes pour combiner leurs éléments en un seul vecteur (plutôt qu'en un vecteur de listes)\newline\\  \textbf{de:vers  }:   génère une séquence d'entiers; ?:? est prioritaire: 1:4 + 1 vaut ?2,3,4,5?\newline\\  \textbf{seq(from,to) }:    génère une séquence;  by= spécifie l'incrément; length= spécifie la longueur\newline\\  \textbf{seq(along=x)  }:   génère une suite 1, 2, \dots, length(x); utile pour les boucles for \newline\\  \textbf{rep(x,times)  }:   répète times fois la valeur x; utilisez  each=n  pour répéter n fois  chaque élément de x; rep(c(1,2,3),2) vaut 1 2 3 1 2 3; rep(c(1,2,3),each=2) vaut  1 1 2 2 3 3\newline\\  \textbf{data.frame(\dots)  }:   crée un data frame avec les  arguments (nommés ou non); e.g: data.frame(v=1:4, ch=c("a", "b", "c", "d"), lettre= "A"); les vecteurs plus courts (ici: "A") sont réutilisés (recyclés) plusieurs fois pour atteindre la longueur du vecteur le plus long ; à la différence d'une matrix, un data.frame est un tableau dont les colonnes peuvent être de types différents\newline\\  \textbf{list(\dots) }:    crée une liste avec les  arguments (nommés ou non, qui peuvent être de longueur différente); e.g.: list(a=c(1,2),b="hi",c=3);\newline\\  \textbf{matrix(x,nrow=,ncol=)  }:   crée une matrice (tous les éléments sont de même type); les éléments se répètent s'ils sont trop courts\newline\\  \textbf{factor(x,levels=)  }:   transforme un vecteur x en factor (les niveaux sont indiqués par levels=)\newline\\  \textbf{rbind(\dots)  }:   combine les arguments par ligne (row)\newline\\  \textbf{cbind(\dots)  }:   combine les arguments par colonne\newline\\  \subsection{Extraction de données}\subsubsection{Indexer des listes}\textbf{x[i]  }:   le ou les éléments i de la liste (renvoyé(s) sous forme de liste, à la différence des cas suivants; fonctionne comme pour les vecteurs)\newline\\  \textbf{x[[n]]   }:  n ième élément de la liste\newline\\  \textbf{x[["nom"]]   }:  l'élément nommé  "nom"\newline\\  \textbf{x\$nom  }:   l'élément nommé  "nom"\newline\\  \subsubsection{Indexer des vecteurs}\textbf{x[n]   }:   n ième élément \newline\\  \textbf{x[-n]    }:  tous sauf le n ième élément\newline\\  \textbf{x[1:n]     }: les n premier éléments\newline\\  \textbf{x[-(1:n)]    }:  les éléments de n+1 à la fin\newline\\  \textbf{x[c(1,4,2)]    }:  des éléments spécifiques\newline\\  \textbf{x["nom"]    }:  l'élément nommé  "nom" \newline\\  \textbf{x[x > 3]    }:  tous les éléments plus grands que 3\newline\\   \textbf{x[x > 3 \& x < 5]    }:  tous les éléments plus grands que 3 et plus petits que 5 \newline\\  \textbf{x[x \%in\% c("a","and","the")] }:     les éléments appartenant à l'ensemble donné\newline\\  \subsubsection{Indexer des matrices} \textbf{x[i,j]  }:    l'élément de la ligne i, colonne j\newline\\  \textbf{x[i,]  }:    toute la ligne i \newline\\  \textbf{x[,j]   }:   toute la colonne j \newline\\  \textbf{x[,c(1,3)]  }:    les colonnes 1 et 3 \newline\\  \textbf{x["nom",]  }:    la ligne nommée "nom" \newline\\  \subsubsection{Indexer des data.frame} (comme pour les matrices plus ce qui suit)          \textbf{x[["nom"]]   }:   la colonne nommée "nom"\newline\\  \textbf{x\$nom   }:  la colonne nommée "nom" \newline\\  \subsection{Conversion d'objets}     \textbf{as.data.frame(x), as.numeric(x), as.logical(x),  as.character(x), \dots} :    conversion de type, e.g.: as.logical(x) convertit x en TRUE ou FALSE) ; pour la liste complète, faites methods(as)\newline\\\subsection{Information sur les objets}      \textbf{is.na(x), is.null(x), is.array(x), is.data.frame(x), is.numeric(x), is.complex(x), is.character(x), \dots} :     tests de type; renvoie TRUE ou FALSE; pour une liste complète, faites  methods(is)\newline\\        \textbf{length(x)  } :   nombre d'éléments dans x\newline\\       \textbf{ dim(x)    } : récupère ou définit (dim(x) <- c(3,2)) les dimensions d'un objet\newline\\       \textbf{ nrow(x) et NROW(x)} :     nombre de lignes; NROW(x)  considère un vecteur comme une matrice\newline\\        \textbf{ncol(x) et NCOL(x)   } :  idem pour les colonnes\newline\\        \textbf{class(x) } :    récupère ou définit la classe de x; class(x) <- "maclasse"\newline\\        \textbf{unclass(x)  } :   enlève l'attribut de classe de x\newline\\        \textbf{attr(x,which=) } :    récupère ou définit un attribut de x\newline\\        \textbf{attributes(x) } :    récupère ou définit la liste des attributs de x\newline\\        \textbf{which.max(x)  } :   trouve l'indice du plus grand élément de x\newline\\        \textbf{which.min(x)  } :   trouve l'indice du plus petit élément de x\newline\\        \textbf{rev(x)} :     renverse l'ordre des éléments de x\newline\\        \textbf{sort(x)  } :   trie les éléments de x par ordre croissant; pour l'ordre décroissant: rev(sort(x))\newline\\        \textbf{order()  } :   renvoie une série d'indices permettant de permuter un tableau afin de le mettre dans l'ordre selon les valeurs de certaines colonnes; e.g.,trier par ordre alphabétique de prénom le tableau suivant:\newline\\   \textbf{x<-data.frame(prenom=c("Bernard", "Charles", "Annie"),age=c(10,20,30)); x[order(x\$prenom),]}\newline\\        \textbf{cut(x,breaks)} :     découpe x en intervalles (factors); breaks est le nombre de cas ou un vecteur de cloisons\newline\\        \textbf{which(x == a)  } :   renvoie les indices de x pour lesquels le résultat de l'opération logique est vrai (TRUE), dans cette exemple les valeurs de i pour lesquelles  x[i]==a (l'argument de cette fonction doit être une variable de type " logique " (vrai ou faux))\newline\\        \textbf{na.omit(x)} :     supprime les observations avec des valeurs manquantes (NA: not available); supprime les lignes correspondantes si x est une matrice ou un data.frame)\newline\\        \textbf{unique(x) } :    renvoie  x sans les éléments dupliqués (pour un data.frame, ne renvoie que des lignes uniques)\newline\\        \textbf{table(x)} :     renvoie une table avec le décompte de chaque valeur différente de x; table(x,y) renvoie un tableau de contingence\newline\\  \subsection{Mathématiques}     \textbf{sin,cos,tan,log,log10,exp  } :     fonctions mathématiques\newline\\      \textbf{ max(x)   } :    maximum des éléments de x\newline\\      \textbf{ min(x)   } :    minimum des éléments de x\newline\\      \textbf{ range(x) } :     mini et maxi: c(min(x), max(x))\newline\\      \textbf{ sum(x)   } :    somme des éléments de x\newline\\     \textbf{  diff(x)  } :     différence entre chaque élément de x et son prédécesseur\newline\\     \textbf{  prod(x)  } :     produit des éléments de x\newline\\     \textbf{  mean(x)   } :    moyenne des éléments de x\newline\\      \textbf{ median(x) } :      médiane des éléments de x\newline\\      \textbf{ quantile(x,probs=)    } :   quantiles correspondant aux probabilités données; le paramètre par défaut\newline\\      \textbf{probs=c(0,.25,.5,.75,1) } :  donne les quartiles\newline\\    \textbf{   weighted.mean(x, w)  } :    moyenne pondérée de x (pondération par w)\newline\\    \textbf{   rank(x)  } :     rang des éléments de x\newline\\     \textbf{  var(x) ou cov(x)  } :     variance des éléments de x (calculé avec n-1 au dénominateur); si x est une matrice ou un data.frame, la matrice de  variance/covariance est calculée\newline\\     \textbf{  sd(x)   } :    écart-type (standard deviation) de x\newline\\     \textbf{  cor(x)   } :    matrice de corrélation de x (pour une matrice ou un data.frame)\newline\\     \textbf{  var(x, y) ou  cov(x, y)    } :   covariance entre x et y, ou entre les colonnes de x et celles de y si ce sont des matrices ou des data frames.\newline\\      \textbf{ cor(x, y)   } :    coefficient de corrélation linéaire  entre x et y, ou matrice de corrélation si ce sont des matrices ou des data frames.\newline\\     \textbf{  round(x, n)     } :  arrondit les éléments de x à n décimales\newline\\      \textbf{ pmin(x,y,\dots)  } :     un vecteur dont le ième élément est le minimum  des valeurs x[i], y[i], \dots\newline\\      \textbf{ pmax(x,y,\dots)  } :     idem pour le maximum\newline\\      \textbf{ union(x,y), intersect(x,y), setdiff(x,y)   } :    union et intersection d'ensembles; setdiff(x,y) trouve les éléments de x qui ne sont pas dans y\newline\\     \textbf{  abs(x)  } :     valeur absolue\newline\\    \textbf{   filter(x,filter)    } :   applique un filtre linéaire à une série temporelle; e.g., pour une moyenne mobile sur trois périodes: filter(x, c(1/3, 1/3, 1/3))\newline\\    \textbf{   na.rm=FALSE   } :    De nombreuses fonctions mathématiques ont un paramètre  na.rm=TRUE (non available removed) pour enlever les données manquantes (NA) avant le calcul\newline\\  \subsection{Matrices}   \textbf{  t(x)    } :   transposée\newline\\     \textbf{  diag(x)    } :   diagonale\newline\\      \textbf{\%*\%} :     multiplication de matrices\newline\\     \textbf{  solve(a,b)   } :    trouve  x tel que a \%*\% x = b\newline\\     \textbf{  solve(a)   } :    matrice inverse de a\newline\\     \textbf{  rowsum(x)   } :    somme par ligne d'une matrice ou d'un objet similaire \newline\\    \textbf{   colsum(x)   } :    somme par colonne\newline\\    \textbf{   rowMeans(x)    } :   moyenne des lignes d'une matrice\newline\\    \textbf{   colMeans(x)   } :    idem pour les colonnes\newline\\  \subsection{Traitement avancé des données} \textbf{    apply(X,MARGIN,FUN=, \dots)    } :   applique une fonction FUN aux marges de X (MARGIN=1 pour les lignes, MARGIN=2 pour les colonnes); les paramètres \dots sont passés à la fonction FUN.\newline\\    \textbf{   lapply(X,FUN)   } :    applique une fonction FUN à chaque élément de X\newline\\     \textbf{  merge(x,y)  } :     fusionne 2 data frames en utilisant leurs noms de colonnes en commun (ou en les désignant avec by.x et by.y)\newline\\    \textbf{   aggregate(x,by,FUN)   } :    divise le data frame x en groupes, calcule la fonction FUN pour chacun; by est une liste d'éléments de regroupement, chaque élément aussi long que le nombre de ligne de x\newline\\    \textbf{   stack(x, \dots)   } :    transforme un tableau en plusieurs colonnes en tableau à 1 colonne, en indiquant d'où vient chaque valeur; e.g.: stack(data.frame(a=1:3,b=4:6))\newline\\    \textbf{   unstack(x, \dots)   } :   inverse de stack()\newline\\    \textbf{   reshape(x, \dots)   } :    fonction avancée (et compliquée) réorganisant  en largeur ou en longueur une data.frame (e.g.: un tableau de 2 variables avec 3 années pour 4 pays contient 24 données, organisées en 2x12 ou 6x4 8x3; reshape convertit entre ces formats)\newline\\   \subsection{Chaînes de caractères}  \textbf{   paste(\dots)   } :    concatène des vecteurs après conversion en caractères ; sep= les sépare (par défaut: espace)\newline\\     \textbf{  substr(x,start,stop)    } :   extrait une sous-chaîne de caractères  \textbf{   grep(pattern,x)   } :    renvoie les indices des éléments de x dans lesquels on trouve le patron pattern, e.g.: grep ("b", c("ab", "cd", "bz"))\newline\\    \textbf{   tolower(x)   } :    met en minuscules\newline\\    \textbf{   toupper(x)   } :    met en majuscules\newline\\    \textbf{   match(x,table)    } :   pour chaque élément de x, renvoie NA si l'élément n'est pas trouvé dans table, sinon renvoie la position où il se trouve dans table\newline\\   \textbf{    x \%in\% table  } :     pour chaque élément de x, renvoie TRUE si l'élément est trouvé dans table, sinon renvoie FALSE\newline\\     \textbf{  nchar(x)   } :    nombre de caractères\newline\\       \subsection{Dates et heures}La classe Date enregistre des dates. POSIXct enregistre date, heure et fuseau horaire. Les comparaisons (>, < \dots), seq()ence, et écart de temps (difftime()) sont utiles. On peut enlever ou ajouter des jours à un objet Date (+, -).             \textbf{   as.Date(x)  } :     convertit une chaîne de caractères en date; as.Date("2009-12-31")+1 renvoie le 1er janvier 2010.\newline\\     \textbf{  format(x)   } :    l'inverse; on peut choisir la représentation voulue (cf. help(strftime))\newline\\  \subsection{Périphériques graphiques}  \textbf{   windows()   } :    ouvre une fenêtre graphique sous Windows\newline\\    \textbf{   x11()  } :     idem sous GNU/linux ou MacOSX\newline\\   \textbf{    pdf(file), png(file), jpeg(file), bmp(file), tiff(file)    } :   se prépare à écrire les instructions graphiques qui suivront dans le fichier file, au format désigné (pdf ou png recommandés); width= et height= fixent les dimensions\newline\\    \textbf{   dev.off()   } :    ferme la fenêtre graphique ou le fichier graphique spécifié (par défaut: celui en cours); cf. aussi  dev.cur, dev.set\newline\\       \subsection{Graphiques}\subsubsection{Commandes principales}   \textbf{  plot(x)   } :    graphique de x (fonction générique ayant des effets différents selon l'objet)\newline\\     \textbf{  plot(x, y)    } :   nuage de points\newline\\     \textbf{  hist(x)  } :     histogramme des fréquences de x\newline\\     \textbf{  barplot(x)    } :   diagramme en barres\newline\\     \textbf{  pie(x)    } :   diagramme circulaire (" camembert ")\newline\\    \textbf{   boxplot(x)    } :   diagramme en boîte [boîte à moustaches]; la boîte et son milieu montrent les 3 quartiles;\newline\\   les moustaches (whisker) un intervalle de confiance de 95\% pour la médiane (s'il y a des valeurs en dehors, elles sont affichées)\newline\\    \textbf{   sunflowerplot(x, y)    } :   comme plot(x,y)  mais les points qui se superposent exactement sont représentés avec des " fleurs " (un pétale par valeur répétée)\newline\\    \textbf{   stripchart(x, method="stack")   } :    superpose les valeurs identiques du vecteur x; e.g. stripchart(round(rnorm(30,sd=5)), method="stack")\newline\\    \textbf{   coplot(y?x | a)    } :   nuage des points de coordonnées x, y pour chaque valeur ou intervalle de valeur de a\newline\\    \textbf{   mosaicplot(table(x,y))   } :    version graphique de la table de contin­gence (les surfaces des carrés sont proportionnelles aux effectifs)\newline\\    \textbf{   image(table(x,y))   } :    similaire mais les effectifs influencent la couleur et non la surface\newline\\     \textbf{  pairs(x)   } :    tableau des nuages de points entre toutes les paires de colonnes de x\newline\\    \textbf{   plot.ts(x)   } :    pour une ou des série(s) temporelle(s) (classe "ts"), valeurs de x en fonction du temps\newline\\    \textbf{   ts.plot(x)  } :     idem mais les séries peuvent ne pas commencer ou finir en même temps\newline\\    \textbf{   qqnorm(x)   } :    nuage des quantiles observés contre quantiles théoriques; si  x suit une loi normale, une droite; comparer qqnorm(rnorm(100)) et   qqnorm(1:100)\newline\\     \textbf{  qqplot(x, y)  } :     quantiles de y en fonction des quantiles de x\newline\\  Les paramètres suivants sont communs à de nombreuses fonctions graphiques :           \textbf{   add=TRUE      } :  ajoute sur le graphique précédent\newline\\    \textbf{   axes=FALSE   } :    ne trace pas les axes\newline\\    \textbf{   type="p"  } :     type de représentation des coordonnées; "p": points, "l": lignes, "b": (both) points et lignes, "o": idem mais lignes sur (over) les points, "h": bâtons, "s": escaliers (données en haut des barres\newline\\   verticales), "S": idem (données en bas des barres), "n": définit la zone de coordonnées mais ne trace rien (utiliser après les commandes graphiques de bas niveau  qui suivent)\newline\\    \textbf{   xlim=, ylim=  } :     limites des zones du graphique, e.g. xlim=c(1,5)\newline\\     \textbf{  xlab=, ylab=   } :    titre des axes (caractères)\newline\\    \textbf{   main=    } :   titre du graphique (caractères)\newline\\    \textbf{   sub=   } :    sous-titre du graphique (caractères)\newline\\  \subsubsection{Commandes graphiques de bas niveau}Permettent de compléter un graphique existant (éventuellement vide avec plot(\dots, type="n")             \textbf{  points(x, y)  } :     ajoute des points (type= peut être utilisé)\newline\\     \textbf{  lines(x, y)  } :     ajoute des lignes\newline\\     \textbf{  text(x, y, labels, \dots)  } :     ajoute du texte (labels) aux coordonnées; e.g.:  plot(x, y, type="n"); text(x, y, names)\newline\\     \textbf{  segments(x0, y0, x1, y1)  } :     trace des segments de (x0,y0) à (x1,y1)\newline\\     \textbf{  abline(a,b)   } :    trace une droite (de forme y=a+b*x)\newline\\     \textbf{  abline(lm.obj)   } :    trace la droite de régression du modèle linéaire lm.obj\newline\\   \textbf{    legend(x, y, legend)  } :     ajoute une légende au point (x,y) avec les symboles donnés par legende\newline\\    \textbf{   axis(side)   } :    ajoute un axe en bas (side=1), à gauche (2), en haut (3) ou à droite (4); optionnels: at= pour les coordonnées des graduation, labels= pour leur texte\newline\\    \textbf{   box()    } :   encadre le graphique\newline\\    \textbf{   rug(x)   } :    ajoute près de l'axe des abscisses une petite barre pour chaque valeur de x\newline\\    \textbf{   locator(n)  } :     renvoie les coordonnées des clics de la souris après n clics sur le graphique\newline\\  \subsubsection{Paramètres graphiques}   \textbf{  par(\dots)  } :     définit les paramètres suivants pour les graphiques à venir, e.g. par(cex=2); nombre de ces paramètres peuvent aussi être utilisés directement avec une commande graphique de haut ou bas niveau, e.g. plot(x, cex=2) ; liste complète avec help(par)\newline\\    \textbf{   cex  } :     taille du texte et des symboles par rapport à la valeur par défaut (character expansion)\newline\\     \textbf{  col   } :    couleur(s) des symboles et lignes; e.g. col="red", "blue" cf.  colors(); e.g. pour créer des vecteurs de 5 couleurs, faire suivre col= de gray(0:5/5), rainbow(5) ou terrain.colors(5)\newline\\    \textbf{   lty   } :    type de ligne; 1: pleine, 2: tirets, 3: pointillés, 4: tirets-points, 5: longs tirets, 6: tiret-court/tiret-long; (configurable)\newline\\     \textbf{  lwd   } :    largeur des lignes\newline\\    \textbf{   pch  } :     type de symboles pour les points (code entier de 1 à 25, ou caractère entre "")\newline\\    \textbf{   xaxt="n"   } :    ne trace pas l'axe des abscisses\newline\\    \textbf{   yaxt="n"  } :     ne trace pas l'axe des ordonnées\newline\\  \subsubsection{Groupes de graphiques conditionnels}Pour accéder à ces fonctions, il faut faire avant: library(lattice)\newline\\  La formule y?x trace y en fonction de x. On peut faire un graphique y?x  par sous groupe de données en indiquant l'appartenance à tel ou tel groupe par le vecteur g1: y?x | g1; pour toutes les combinaisons des séries de groupes g1 et g2:  y?x | g1*g2             \textbf{  xyplot(y?x)   } :    nuages de points\newline\\     \textbf{  barchart(y?x)   } :    diagrammes en barre\newline\\     \textbf{  histogram(?x)  } :     histogrammes\newline\\     \textbf{  bwplot(y?x)   } :    boîtes à moustache\newline\\     \textbf{  stripplot(y?x)  } :     graphique à une dimension, x doit être un nombre, y peut être un facteur\newline\\                      \subsection{Modèles et analyses statistiques}  \textbf{   lm(formula)  } :     estimation d'un modèle linéaire; formula=y~a+b estime le modèle y=ax+by+c (mettre -1 dans la formule pour enlever la constante c); summary(lm(\dots)) donne des informations utiles\newline\\     \textbf{  glm(formula,family=) } :      estime un modèle linéaire généralisé; e.g. family= binomial(link = "logit") pour un modèle logit (cf.  ?family)\newline\\  Après la formule, on peut en général préciser le nom du data.frame (data=) et le sous-ensemble de données (subset= suivi d'un vecteur de valeurs logiques)            \textbf{   predict(fit,\dots)   } :    fait une prédiction à partir du modèle estimé fit et de nouvelles données\newline\\    \textbf{   coef(fit)  } :     coefficients du modèle estimé\newline\\    \textbf{   residuals(fit)  } :     résidus du modèle\newline\\    \textbf{   fitted(fit)  } :     valeurs prédites par le modèle   \newline\\      \textbf{  rnorm(n, mean=0, sd=1)   } :    distribution gaussienne (normale)\newline\\    \textbf{   rt(n, df)  } :     distribution de Student (t)\newline\\    \textbf{   rf(n, df1, df2)   } :    distribution de Fisher?Snedecor (F)\newline\\  Ces fonctions de distribution peuvent être modifiées en changeant la première lettre pour avoir: r (random) pour tirer des nombres au hasard; d: densité de probabilité; p: idem cumulée; q: la valeur du quantile (avec le paramètre p:    0 <  p < 1)          \subsection{Programmation}Fonctions permettant d'enchaîner des opérations de manière structurée. Pour avoir de l'aide sur ces fonctions, saisir leur nom entre guillemets; e.g. help("if")      \newline\\         \textbf{  function( arglist ) {expr}   } :    définition de fonction; arglist est une liste d'arguments, expr est une expression exécutée; e.g.: mafonction$<-$function( a, b ) {a+2*b}; mafonction(1,2) \#renvoie 5\newline\\    \textbf{   return(value)  } :     mis dans expr lors d'une définition de fonction, indique que la fonction doit renvoyer ce résultat (si return est absent, la fonction renvoie la dernière valeur calculée dans expr)\newline\\    \textbf{   if(cond) {expr}    } :   si cond est vrai (TRUE), évaluer expr\newline\\    \textbf{  ==  !=  <  >  <=  >=    } :   opérateurs de comparaison, dans l'ordre: égal, différent, inférieur, supérieur, inférieur ou égal, supérieur ou égal; e.g. 1==1 vaut TRUE ou  T; 1!=1 vaut FALSE ou F; dans les opérations avec des nombres, T est converti en 1 et F en 0 (T-1==0 est vrai)\newline\\    \textbf{   if(cond) \{cons.expr\} else \{alt.expr\} }    si cond est vrai évaluer  cons.expr sinon  évaluer alt.expr\newline\\      \textbf{for(var in seq) \{expr\} } :      exécute l'expression pour chaque valeur de var prises dans une sequence\newline\\   \textbf{    while(cond) \{expr\}  } :     exécute l'expression tant que la condition est vraie\newline\\   \textbf{    repeat \{expr\}  } :     répète expr en boucle; penser à l'arrêter avec if(\dots) {break} (ou avec les touches Ctrl+C)\newline\\   \textbf{break } :      arrête une boucle for, while ou repeat\newline\\    \textbf{   next   } :    arrête l'itération en cours et reprend la boucle (dans le cas de for, avec la valeur suivante de la sequence)\newline\\    \textbf{   ifelse(test, yes, no)  } :     pour chaque ligne/cellule de test, renvoie la valeur yes si le test est TRUE, no s'il est FALSE, NA s'il est indéterminé\newline\\  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 00000000001000011111000010000000000000000000000% 00000000001000010000000010000000000000000000000% 00000000001000010000000010000000000000000000000% 00000000001000011111000010000000000000000000000% 00000000000000000000000000000000000000000000000%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 00000000001000011111000010000000000000000000000% 00000000001000010000000010000000000000000000000% 00000000001000010000000010000000000000000000000% 00000000001000011111000010000000000000000000000% 000000000000000000000000000000000000000000000 00%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\begin{lstlisting}[language=html]\end{lstlisting}v<-seq(10,60, by=10)w<-c(20,10,31,31,61,51)u<-c(5,5,5,32,62,49)##---------------------------------##---------------------------------##---------------------------------\textbf{Simple List}savehistory("Sauvegarde_historique_TP1.R")remove()savehistory("Sauvegarde_historique_TP1.R") \begin{description} \item[help(sujet) :] documentation sur un sujet. Flèches haut et bas pour se déplacer, touche q pour quitter ; \item[mot2 :] définition2. \end{description}\begin{lstlisting}[language=html]\end{lstlisting}\begin{figure}[H]\begin{center}\includegraphics[scale=1]{ilu/g1.png}\caption{Probabilité d'obtention de face entre 0 et 6}\end{center}\end{figure}